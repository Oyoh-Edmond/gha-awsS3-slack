name: Random numbers

on:
  workflow_dispatch:
    inputs:
      filename:
        description: 'File to display'
        required: true
        default: 'rand.txt'

jobs:
  echo_file:
    runs-on: ubuntu-latest
    outputs:
      content: ${{ steps.echo_contents.outputs.content }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Display file contents
      id: echo_contents
      run: |
        content=$(cat "${{ github.event.inputs.filename }}")
        echo "$content"
        echo "content<<EOF" >> $GITHUB_ENV
        echo "$content" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV
      env:
        GITHUB_ENV: ${{ runner.temp }}/github_env

    - name: Set content output
      run: echo "content=${{ env.content }}" >> $GITHUB_ENV
      env:
        GITHUB_ENV: ${{ runner.temp }}/github_env
    outputs:
      content: ${{ env.content }}

  notify_slack:
    runs-on: ubuntu-latest
    needs: [echo_file]
    steps:
    - name: Notify Slack on Job's Success
      if: success()
      uses: wearerequired/slack-messaging-action@v1
      with:
        bot_token: ${{ secrets.SLACK_BOT_TOKEN }}
        channel: 'gha_interns'
        payload: |
          {
            "username": "Edmond & Jide",
            "text": "${{ needs.echo_file.outputs.content }}"
          }

  convert_to_json:
    runs-on: ubuntu-latest
    needs: [echo_file]
    outputs:
      json_output: ${{ steps.convert_json.outputs.json_output }}
    steps:
    - name: Install jq
      run: sudo apt-get update && sudo apt-get install -y jq

    - name: Convert to JSON
      id: convert_json
      run: |
        json_output=$(echo "${{ needs.echo_file.outputs.content }}" | jq -Rs '{items: split("\n")[:-1] | to_entries | map({("item" + (.key + 1 | tostring)): .value}) | add}')
        echo "json_output<<EOF" >> $GITHUB_ENV
        echo "$json_output" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV
      env:
        GITHUB_ENV: ${{ runner.temp }}/github_env
     outputs:
      json_output: ${{ env.json_output }}

    - name: Notify Slack with JSON
      if: success()
      uses: wearerequired/slack-messaging-action@v1
      with:
        bot_token: ${{ secrets.SLACK_BOT_TOKEN }}
        channel: 'gha_interns'
        payload: |
          {
            "username": "Edmond & Jide",
            "text": "${{ needs.convert_to_json.outputs.json_output }}"
          }
